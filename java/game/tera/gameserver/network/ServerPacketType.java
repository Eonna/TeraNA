package tera.gameserver.network;

/**
 * @author Ronn Mod Evestu
 */
public enum ServerPacketType
{
	AUTH_ATTEMPT(0x4DBC), // постоянка
	AUTH_FAILED(0xD5A2),
	S_REMAIN_PLAY_TIME(0xDEC6), // 00 00 00 00 AD 68 06 00
	S_LOGIN_ARBITER(0xC8EF), // 01 00 02 00
	S_LOGIN_ACCOUNT_INFO(0xDB4E),
	S_GET_USER_LIST(0x782C), // 01 00 17 00
	S_UPDATE_CONTENTS_ON_OFF(0x7ED1),
	S_CONFIRM_INVITE_CODE_BUTTON(0xE203),
	S_ACCOUNT_PACKAGE_LIST(0x88C6),
	S_LOADING_SCREEN_CONTROL_INFO(0xB6EE),
	S_BROCAST_GUILD_FLAG(0x8CFD),
	S_CURRENT_ELECTION_STATE(0xB5BE),
	S_ONGOING_HUNTING_EVENT_LIST(0xA390),
	S_UNION_SUMMARY(0x6774),
	S_TRADE_BROKER_HIGHEST_ITEM_LEVEL(0x7637),
	
	
	
	
	S_CHECK_USERNAME(0xE2A9), // 01
	S_STR_EVALUATE_LIST(0xD4F8), // 28 00 0C 8D 01 00 08 00 08 00 00 00 16 00 01 00
	S_CREATE_USER(0x6A48), // 01
	PLAYER_DELETE_RESULT(0xA550), // 01
	S_CAN_CREATE_USER(0x98B6),
	
	
	S_SELECT_USER(0xB540), // 01 00 00 00 00 00 00 00
	S_LOGIN(0xD9A5), // AF 00 B9 00
	S_INVEN(0x6978), // 06 00 1F 00
	PLAYER_BANK(0xB2E4), // 06 00 1F 00
	S_SKILL_LIST(0xB39E), // 06 00 08 00
	S_ARTISAN_SKILL_LIST(0xC498), // 06 00 19 00 00 00 00 00
	S_PET_INCUBATOR_INFO_CHANGE(0xA2CF), // 05 00 16 00 01 00 FFFFFF
	S_PET_INFO_CLEAR(0xB96A),
	S_VIRTUAL_LATENCY(0x5526), // 00 00 00 00 00 00 00 00
	S_MOVE_DISTANCE_DELTA(0x88D7), // 00 00 48 43
	S_MY_DESCRIPTION(0x9311), // 06 00 00 00
	S_LOAD_TOPO(0xD5BB), // 0D 00 00 00
	S_LOAD_HINT(0x87C7), // 00 00 00 00 ^
	SETTINGS(0x5333), // It is not set
	S_LOAD_CLIENT_ACCOUNT_SETTING(0x72A6), // It is not set
	HOT_KEY_CHANGED(0xB023), // It is not set
	S_AVAILABLE_SOCIAL_LIST(0xF511),
	S_ARTISAN_RECIPE_LIST(0x923F),
	S_NPCGUILD_LIST(0xE704),
	S_F2P_PremiumUser_Permission(0xF7EB),
	S_NOTIFY_CHANGE_CLASS_AND_ELITE(0xF62F),
	S_MASSTIGE_STATUS(0xF337),
	S_AVAILABLE_EVENT_MATCHING_LIST(0xC6D4),
	S_USER_EXTERNAL_CHANGE(0xB6E4),
	S_USER_ITEM_EQUIP_CHANGER(0xB92C),
	S_FESTIVAL_LIST(0xAD5C),
	S_SEND_USER_PLAY_TIME(0x5005),
	S_PCBANGINVENTORY_DATALIST(0xF77C),
	S_SIMPLE_TIP_REPEAT_CHECK(0xCF26),
	S_GUARD_PK_POLICY(0xE3A6),
	
	
	GUILD_CHECK_NAME(0x8D0C),
	GUILD_MEMBERS(0xBEA6), // 06 00 08 00
	GUILD_INFO(0xE49A), // 06 00 08 00
	GUILD_INPUT_NAME(0xE224), // 10 00 82 93 61 29 AF 03 00 80 00 01 AA 05 00 00
	GUILD_LOGS(0x942E),
	GUILD_LOAD_ICON(0x648F),
	GUILD_ICON_INFO(0xB229),
	GUILD_BANK(0xB2E4),

	FRIEND_LIST_INFO(0xD342),
	FRIEND_LIST_STATE(0xB6EF),

	TEST_29(0xB917), // 02 00 08 00 08 00 18 00 01 00 00 00
	TEST_24(0x6DDF), // 00 00 00 00
	TEST_25(0x7C1A), // 00 00 00 00
	S_ACCOUNT_BENEFIT_LIST(0xC264), // 00 00 00 00
	TEST_30(0x9131), // 00 00 00 00 00 00 00 00
	TEST_27(0x8118), // 00 00 00 00 00 00 00 00
	S_SPAWN_ME(0xEFDA), // 0F 13 B5 03 00 80 00 0B
	TEST_35(0x99EC), // 15 00 02 88-FF FF FF 7F **
	S_PLAYER_STAT_UPDATE(0xD0F4), // C7 00 C2 06 00 00 - 78 00 00 00
	TEST_32(0x6B95), // ID 00

	S_REIGN_INFO(0xD408), // 08 00 67 BB 01 00 00 00
	S_VISIT_NEW_SECTION(0xC558),

	
	QUEST_COMPLETE_LIST(0x88),
	S_CLEAR_QUEST_INFO(0xBC4A),
    S_QUEST_INFO(0xF7F2),
    S_TOGGLE_TASK_INFO_WINDOW_ON(0xBF7B),
    S_TOGGLE_TASK_INFO_WINDOW_OFF(0xBF7B),
    S_QUEST_VILLAGER_INFO(0x52D1),
	S_COMPLETED_MISSION_INFO(0xB8AB),
	QUEST_SPLIT_LIST(0xB33F),
    S_UPDATE_QUEST(0xF3CC),
	S_PLAY_MOVIE(0xF003),
	QUEST_INFO(0xB25E),
	S_DAILY_QUEST_COMPLETE_COUNT(0xBC2C),
	
	
	EVENT_MESSAGE(0x91E5),

	S_NPC_LOCATION(0xA91D), // движение любого обьекта
	S_START_CLIMBING(0xCA4D),
	S_INSTANT_MOVE(0xFFA7),
    S_CHAT(0xC62C), // <.F.O.N.T.>
    S_DESPAWN_NPC(0xC960), // 20 00 63 D7 2D 98 00 00 00 80 0B 00 57 54 B7 47
    S_USER_STATUS(0x6381), // 11 00 95 6B 0D 60 0C 00 00 80 00 01 01 00 00 00
    S_CREATURE_ROTATE(0x593A), // 12 00 26 B7 94 DD 0A 00 00 80 0B 00 3A 81 A9 07 поворот

	PLAYER_INFO(0xBA9A), // 93 00 9F 00 A1 00 A3 00 О др игроке
	PLAYER_PVP_ON(0xBF3C),
	PLAYER_PVP_OFF(0xD224),
    PLAYER_MOVE(0x0A44),// was S_USER_LOCATION 0x7750 but bugging out sills big time so changed back for now ....

	S_CREATURE_CHANGE_HP(0x8562), // 24 00 5А 15 7F 0C 00 00 7F 0C 00 00 20 00 00 00
	S_PLAYER_CHANGE_MP(0xB071), // 24 00 53 B0 02 0B 00 00 7F 0C 00 00 20 00 00 00
	S_PLAYER_CHANGE_EXP(0xB584), // 44 00 5F 9D 83 00 00 00 00 00 00 00 48 01 00 00
	S_USER_LEVELUP(0xA417), // 10 00 DE D7 0D 60 0C 00 00 80 00 01 02 00 00 00

	S_MOUNT_VEHICLE(0xBBF1),
	S_UNMOUNT_VEHICLE(0x8548),

	CHAR_DEAD(0x7E30),
	CHAR_STATE(0xC41E), // 1A 00 73 F2 96 07 B7 03 00 80 00 01 B0 E3 A6 47
	PLAYER_DEAD_WINDOW(0x7380), // 12 00 80 73 1E 00 00 00 E6 32 00 00 00
	PLAYER_LORD_NUM(0xCD5F), // 10 00 5F CD 06 00 40 00 36 00 30 00 31 00 00 00

    S_SOCIAL(0xE39D), // 15 00 18 8A E1 11 B7 03 00 80 00 01 26 00 00 00
	REACTION(0xC143),
    S_EACH_SKILL_RESULT(0xC16C), // 53 00 d(0) 48 0E B2 03 00 80 00 02 DD 2E 02 00 00 80 0B 00
	TARGET_CURRENT_HP(0x1111), // 28 00 DD 2E 02 00 00 80 0B 00 28 AF 21 3E 00 00 00 00 01
    S_SHOW_HP(0x5DBA), // 21 00 63 E9 69 F2 0A 00 00 80 0B 00 99 42 4B 3E над бошкой
    NOTIFY_CHARACTER(0xC4DD), // 200 11 00 0E 00 EC A3 1E 00 00 00 E6 32 00 00 00 00

	NPC_STATE(0x985B),

	RESIST_EFFECT(0x985B),

	SUMMON_INFO(0x6B57),

    S_SPAWN_BONFIRE(0x5D45), // 00 80 0E 00
    S_DESPAWN_BONFIRE(0xB3C0), // 0C 6C BE 55 20 00 00 00 80 0E 00 01

	CHARM_SMOKE(0xA238),

	S_SPAWN_NPC(0x64D1), // 69 00 6E AB 00 00 00 80 0B 00
	NPC_PLAYABLE_INFO(0x6B57),
    S_DIALOG_EVENT(0x5A5B), // 200 20 00 D5 B8 BB 52 00 00 00 80 0B 00 CD 08 B5 03
    S_NPC_MENU_SELECT(0xAC3A), // 01 00 00 00-----
    S_DIALOG(0xB25E), // 01 00 3D 00
    S_NPC_STATUS(0x8054), // 1D 00 C3 A1 D0 9A 04 00 00 80 0B 00 00 05 00 00

	NPC_BANK(0x0),
	NPC_BANK_PANEL(0xD521),
	NPC_DIALOG_REPLY(0x7236), // 01 00 3D 00
	NPC_DIALOG_REPLY_SHOP(0xB205), // 01 00 3D 00
	NPC_DIALOG_SKILL_LEARN(0xB494), // 01 00 3D 00
	NPC_DIALOG_SKILL_LEARN_PANEL(0x7880), // 3A 00 54 79 2C 00 38 00 3A
	ITEM_SHOP_TRADE(0x7CEF), // 01 00 3D 00

	MULTI_SHOP(0x6C91),
	OBJECT_POSITION(0xE6C7),
    S_ACTION_STAGE(0xA61B), // 32 00 FC A3 00 00 00 00 54 5A AA 03 00 80 00 00
	CHARGE_SKILL_START(0x988F), // 32 00 FC A3 00 00 00 00 54 5A AA 03 00 80 00 00
	SKILL_MOVE(0xA7B7), // 2A 00 C9 C3 54 5A AA 03 00 80 00 00 00 9A B6 47
	SKILL_END_S_ACTION_END(0xBC92), // 2A 00 C9 C3 54 5A AA 03 00 80 00 00 00 9A B6 47
    S_ACTION_END(0xBC92), // 2A 00 C9 C3 54 5A AA 03 00 80 00 00 00 9A B6 47
	SKILL_REUSE(0x8A0B), // 0C 00 20 90 C4 EA 00 04 58 1B 00 00
	SKILL_FAST_SHOT(0xC372), // 30 00 4F C9 00 00 00 00 01 00 20 00 54 5A AA 03
	SKILL_SLOW_SHOT(0xE8BB), // 3C 00 61 77 DD 31 AF 03 00 80 00 01 63 2B 00 00
	SKILL_NPC_SLOW_SHOT(0xB0D6),
	SKILL_DELETE_SHOT(0xC7BB),
	SKILL_LEASH(0xC2F6),
	SKILL_LOCK_ATTACK(0xA1C1),
	SKILL_LOCK_TARGET(0xCCE8), // 0D 00 EA 5E DD 31 AF 03 02 80 00 01 01
	SHIELD_BLOCK(0xDAFE), // 14 00 FE DA 69 60 0C 00 00 80 00 01 4F 04 0D 44
    S_ABNORMALITY_BEGIN(0x8846), // 20 00 33 92 61 29 AF 03 00 80 00 01 61 29
	APPLED_CHARM_PACKET(0xBB75),
    S_ABNORMALITY_END(0xE445), // 10 00 82 93 61 29 AF 03 00 80 00 01 AA 05 00 00
	CANCEL_CHARM_EFFECT(0x9DE4),

	TRAP_INFO(0x9F1F),
	TRAP_DELETE(0x6772),

    S_LOOT_DROPITEM(0x54F6), // 15 00 6C A6 0D 60 0C 00 00 80 00 01 6B BD 0E 00
    S_SPAWN_DROPITEM(0xB0A5),
	ITEM_TEMPLATE_INFO(0x783C),
    S_DESPAWN_DROPITEM(0x7EC1), // 0C 00 D9 52 48 D9 0F 00 00 80 09 00
	ITEM_REUSE(0xE7C5), // 0C 00 0C A0 7D 00 00 00 14 00 00 00
	PLAYER_EQUIPMENT(0xD3B9), // 40 00 45 F1 8B 06 B0 03 00 80 00 02 11 27 00 00
    S_SHOW_ITEM_TOOLTIP(0x783C), // 2F 01 5D DF 00 00 00 00

	PLAYER_RESTART(0x74A1),
	PLAYER_RESTART_CANCEL_OK(0xC9B2),
	S_PREPARE_EXIT(0xD34A), // 0A 00 00 00
	PLAYER_EXIT_CANCEL_OK(0xE755),
	PLAYER_INCREASE_LEVEL(0xD7DE),

	PLAYER_ACTION_DONED(0x86D4), // 1C 00 D4 86 3A 54 0D 00 00 80 00 03 00 00 00 00
	PLAYER_ACTION_INVITE(0xC8F1), // 36 00 F1 C8 16 00 26 00 10 00 04 00 00 00 3C 8F
	ACTION_START(0xA924), // 08 00 24 A9 04 00 00 00
	PLAYER_WAITING_ACTION(0x7880), // 54 00 80 78 2C 00 3A 00 3C 00 18 00 3A 54 0D 00
	PARTY_INFO(0xFF77), // 9C 00 77 FF 02 00 30 00 30 00 00 00 00 E5 7F 00
	PARTY_MEMBER_INFO(0xB932), // 33 00 32 B9 0D 00 00 00 5F 78 00 00 78 05 00 00
	PARTY_MEMBER_EFFECT(0xB14F), // 31 00 4F B1 01 00 14 00 01 00 24 00 0D 00 00 00
	PARTY_LEAVE(0x55DA), // 04 00 55 DA
	PARTY_MEMBER_COORDS(0x8954), // 04 00 55 DA
	NAME_COLOR(0x5A29), // 10 00 29 5A 86 5D 0D 00 00 80 00 03 02 00 00 00
	OPEN_TRADE(0xB549), // 9C 00 49 B5 38 00 32 00 6A 00 32 00 C6 52 0D 00
	CLOSE_TRADE(0xA2F2), // 18 00 F2 A2 BD 07 00 10 00 80 00 13
	DUEL_START(0x72AD), // 06 AD 72 88 13
	CANCEL_TARGET_HP(0xF470), // 70 F4 D2 07 00 10 00 80 00 13

	TP1(0x8293), // 10 00 FC 5D 96 07 B7 03 00 80 00 01 78 41 0F 00

	PUT_AN_PEGAS(0x57E9), // 10 00 E9 57 4F 6E 0D 00 00 80 00 04 01 00 00 00
	FLY_PEGAS(0xB9AD), // 18 00 AD B9 4F 6E 0D 00 00 80 00 04 08 00 00 00
	FLY_PEGAS_REPLY_PACKET(0xd9c2),
	DEPARTURE_PORTAL(0x1111), // 18 00 AD B9 4F 6E 0D 00 00 80 00 04 08 00 00 00
	STATE_ALLOWED(0x71C3),
	GET_OFF_PEGAS(0xB63E), // 0C 00 3E B6 4F 6E 0D 00 00 80 00 04
	ROUTE_PEGAS(0xEFA6), // 20 00 A6 EF 01 00 08 00 08 00 00 00 08 00 00 00

	TELEPORT_POINTS(0xA5F7),

	PLAYER_ACTION_START(0xBEB7), // 2C 00 36 00 42 00 00
	DUEL_END(0x2C88), // 32 17 B2 03 00 80 00 04 11 1D B2 03
	DUEL_END_OK(0xCC79), // 00
	DUEL_END_OK2(0x63BB), // 06 00
	RIVALS(0xE58B), // 14 00 32 17 B2 03 00 80 00 04 и 2го ИД

	RESOURSE_INFO(0xAB9D),
	RESOURSE_REMOVE(0xC0D6),
	RESOURSE_START_COLLECT(0xFB4E),
	RESOURSE_END_COLLECT(0x9D3F),
	RESOURSE_INCREASE_LEVEL(0xE49B),
	RESOURSE_COLLECT_PROGRESS(0xA671),

	CONNECT_SUCCESSFUL(0xFFFE),
	SERVER_KEY(0xFFFF),
	DEVELOPER_PACKET(0xFFFD),

	S_MY_CONDITION(0x92D0),

	S_SYSTEM_MESSAGE(0x91E5),
	MESSAGE_ADD_ITEM(0xB79F),

	ENCHANT_ITEM_DIALOG_INFO(0xFCEC),
	ENCHANT_RESULT(0xC06B), ;

	public static final int LENGTH = values().length;

	public static final void init()
	{
		ITEM_TEMPLATE_INFO.set(S_SHOW_ITEM_TOOLTIP); // Needs Work Packet Changed From 299 to 689
		QUEST_INFO.set(S_DIALOG);
        S_ACTION_END.set(SKILL_END_S_ACTION_END);
		SUMMON_INFO.set(S_SPAWN_NPC);
		GUILD_CHECK_NAME.set(S_STR_EVALUATE_LIST);
		FLY_PEGAS_REPLY_PACKET.set(PLAYER_WAITING_ACTION);
		DEPARTURE_PORTAL.set(FLY_PEGAS);
		GUILD_BANK.set(PLAYER_BANK);
		EVENT_MESSAGE.set(S_SYSTEM_MESSAGE);
		SKILL_NPC_SLOW_SHOT.set(TRAP_INFO);
		NPC_PLAYABLE_INFO.set(PLAYER_INFO);
	}

	/** опкод пакета */
	private int opcode;

	/**
	 * @param opcode опкод пакета.
	 */
	private ServerPacketType(int opcode)
	{
		this.opcode = opcode;
	}

	/**
	 * @return опкод пакета.
	 */
	public int getOpcode()
	{
		return opcode;
	}

	/**
	 * @param opcode опкод пакета.
	 */
	public void setOpcode(int opcode)
	{
		this.opcode = opcode;
	}

	/**
	 * @param type опкод указанного типа пакета.
	 */
	public void set(ServerPacketType type)
	{
		this.opcode = type.opcode;
	}
}
